/*
Author: Golam Rahman Tushar
........Aust Cse 27th batch.........
*/

//{ Template

//{ C-headers
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <climits>
#include <cfloat>
#include <cctype>
#include <cassert>
#include <ctime>
//}
//{ C++-headers
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <utility>
#include <string>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <map>

using namespace std;
//}

//}
//{ Floating-points
#define EPS DBL_EPSILON
#define abs(x) (((x) < 0) ? - (x) : (x))
#define zero(x) (abs (x) < EPS)
#define equal(a,b) (zero ((a) - (b)))
#define PI 2 * acos (0.0)
#define INF (1<<29)
#define ll long long
#define CountOne(mask) __builtin_popcountll(mask)

template<class T1> void debug(T1 e){cout<<e<<endl;}
template<class T1,class T2> void debug(T1 e1,T2 e2){cout<<e1<<"\t"<<e2<<endl;}
template<class T1,class T2,class T3> void debug(T1 e1,T2 e2,T3 e3){cout<<e1<<"\t"<<e2<<"\t"<<e3<<endl;}
template <typename T>
std::string to_string(T const& value) {
    stringstream sstr;
    sstr << value;
    return sstr.str();
}
//}
template <class T> T gcd(T a,T b){if(b==0) return a;else return gcd(b,a%b);}
template <class T> T lcm(T a,T b){return (a*b)/gcd(a,b);}
template <class T> T power( T a, T b){if(b==0) return 1; T x=a;for(T i=2;i<=b;i++) a=a*x;return a;}
template <class T> T BigMod(T a,T b,T c){if(a==0) return 0;if(b==0) return 1;if(b%2==0){T x=BigMod(a,b/2,c)%c;return (x*x)%c;}else return  ((a%c)*BigMod(a,b-1,c)%c)%c;}

bool isVowel(char ch){ch=tolower(ch);if(ch=='a' | ch=='e' || ch=='i' || ch=='o' || ch=='u')return true;return false;}

///int dx[]= {-1,-1,0,0,1,1};
///int dy[]= {-1,0,-1,1,0,1};
///int dx[]= {0,0,1,-1};/*4 side move*/
///int dy[]= {-1,1,0,0};/*4 side move*/
///int dx[]= {1,1,0,-1,-1,-1,0,1};/*8 side move*/
///int dy[]= {0,1,1,1,0,-1,-1,-1};/*8 side move*/
///int dx[]={1,1,2,2,-1,-1,-2,-2};/*knight move*/
///int dy[]={2,-2,1,-1,2,-2,1,-1};/*knight move*/
/*................Code Starts Here................*/

int arr[30000+7], cnt[1000000+7], ans = 0, Final[200000+7], block = 448;

struct info {
    int L, R, idx;
}q[200000+7];

bool cmp(info a, info b) {
    if(a.L/block != b.L/block) return a.L < b.L;
    return a.R < b.R;
}

void add(int x) {
    cnt[arr[x]]++;
    if((cnt[arr[x]]) == 1) ans++;
}

void rmv(int x) {
    cnt[arr[x]]--;
    if((cnt[arr[x]]) == 0) ans--;
}


int main() {
    //freopen("input.txt","r",stdin);
    int n, i, m;

    scanf("%d",&n);
    for(i=0;i<n;i++) scanf("%d",&arr[i]);

    scanf("%d",&m);
    for(i=0;i<m;i++) {
        scanf("%d %d",&q[i].L, &q[i].R);
        q[i].L--; q[i].R--;
        q[i].idx = i;
    }

    sort(q, q+m, cmp);

    int curL, curR, L = 0, R = 0;
    for(i=0;i<m;i++) {
        curL = q[i].L;
        curR = q[i].R;

        while(L > curL) {
            add(L-1);
            L--;
        }

        while(L < curL) {
            rmv(L);
            L++;
        }

        while(R > curR+1) {
            rmv(R-1);
            R--;
        }
        while(R <= curR) {
            add(R);
            R++;
        }

        Final[q[i].idx] = ans;
    }

    for(i=0;i<m;i++) printf("%d\n",Final[i]);

    return 0;
}
